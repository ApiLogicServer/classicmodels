# cd <project>
# docker compose -f ./devops/docker-compose-dev-local/docker-compose-dev-local.yml up
# --> builds, runs at localhost:5656

version: "3.5"

services:

    mysql-service:
        image: apilogicserver/mysql8.0:latest
        restart: always
        environment:
            # MYSQL_DATABASE: 'db'
            # So you don't have to use root, but you can if you like
            - MYSQL_USER=root
            # You can use whatever password you like
            - MYSQL_PASSWORD=p
            # Password for root access
            - MYSQL_ROOT_PASSWORD=p
        ports:
            # <Port exposed> : <MySQL Port running inside container>
            - '3306:3306'
        expose:
            # Opens port 3306 on the container
            - '3306'

    api-logic-server:
        image: apilogicserver/classicmodels
        # instead using a built image, uncomment the following to build the image dynamically
        # build:
        #     context: ../..
        #     dockerfile: ./devops/docker-compose/Dockerfile.dockerfile
        environment:
          - APILOGICPROJECT_VERBOSE=true
          # for testing
          # - APILOGICPROJECT_CLIENT_URI=//10.0.0.77
          # HOST_IP set in docker-compose.sh/ps1
          # - APILOGICPROJECT_CLIENT_URI=//${HOST_IP}
          - SECURITY_ENABLED=false
          # - APILOGICPROJECT_HTTP_SCHEME=https
          # - PYTHONPATH=/app/ApiLogicProject 
          - APILOGICPROJECT_SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:p@mysql-service:3306/classicmodels
          - APILOGICPROJECT_SQLALCHEMY_DATABASE_URI_AUTHENTICATION=mysql+pymysql://root:p@mysql-service:3306/authdb
        expose:
            - 5656
        ports:
            - 5656:5656
        # volumes:
            # relative path - thanks https://stackoverflow.com/questions/46907558/docker-compose-relative-paths-vs-docker-volume
            # - /Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/docker-compose-nw-postgres:/app
            # works, but finds all server projects (!) - ./../../..:/app
            # - ./../..:/app
        # https://stackoverflow.com/questions/39460892/gunicorn-no-module-named-myproject
        # works, not required; command: python api_logic_server_run.py
        # command:  bash /app/start.sh
        # working_dir: /home/api_logic_project
